boring('My first function!')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div =2)
args(remainder)
play()
evaluate(sum, c(2,4,6))
source('/var/folders/16/c8jrcl911xqcw0gq6dxjzhpm0000gn/T//RtmpoVZQNa/evaluate.R')
evaluate(sum, c(2,4,6))
evaluate(median, c(7,40,9))
evaluate(floor, 11.1)
nxt()
submit()
source('/var/folders/16/c8jrcl911xqcw0gq6dxjzhpm0000gn/T//RtmpoVZQNa/evaluate.R')
source('/var/folders/16/c8jrcl911xqcw0gq6dxjzhpm0000gn/T//RtmpoVZQNa/evaluate.R')
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
source('/var/folders/16/c8jrcl911xqcw0gq6dxjzhpm0000gn/T//RtmpoVZQNa/telegram.R')
telegram("Good","morning")
submit()
telegram("zo is","het","goed")
source('/var/folders/16/c8jrcl911xqcw0gq6dxjzhpm0000gn/T//RtmpoVZQNa/mad_libs.R')
mad_libs(place="Linne",adjective="coursera",noun="great")
mad_libs(place="Linne",adjective="coursera",noun="great")
source('/var/folders/16/c8jrcl911xqcw0gq6dxjzhpm0000gn/T//RtmpoVZQNa/mad_libs.R')
mad_libs(place="Linne",adjective="coursera",noun="great")
submit()
mad_libs(place="Linne",adjective="coursera",noun="great")
source('/var/folders/16/c8jrcl911xqcw0gq6dxjzhpm0000gn/T//RtmpoVZQNa/bin_op.R')
"Good" %p% "job!"
submit ()
'I' %p% 'love' %p% 'R!'
search()
source('~/Desktop/coursera/corr.R')
x<-1:10
if(x>5) {x<-1}
f<-function(x) {g<-functio(y) {}}
f<-function(x) {g<-function(y) {
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
cube <- function(x,n){x^3}
cube(3)
?<<
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
source('~/Desktop/coursera/test.R')
makeVector(3)
makeVector(3c(3,4))
makeVector(c(3,4))
z<-NULL
z
class(z)
unclass(z)
str(z)
makeVector(c(3,4))
x<<3
x<-numeric()
source('~/Desktop/coursera/test.R')
f<make.accumulator()
make.accumulator(1)
source('~/Desktop/coursera/test.R')
source('~/Desktop/coursera/test.R')
Y<-120
y<-120
y
bar(3)
y
source('~/Desktop/coursera/test.R')
y <- 120
y
bar(3)
y
source('~/Desktop/coursera/test.R')
bar(3)
y
source('~/Desktop/coursera/test.R')
bar(3)
y
source('~/Desktop/coursera/test.R')
bar(3)
y
source('~/Desktop/coursera/test.R')
bar(3)
y
source('~/Desktop/coursera/test.R')
Var<1:20
var <- 1:20
var
cahemean(var)
cachemean(var)
makevector(var)
makeVector(var)
var
chachemean(var)
var2<-makevector(var)
var2<-makeVector(var)
var2
var$getmean()
var2$getmean
var2$getmean
var2$getmean
getmean(var2)
getmean()
?x
x
x<- 1:20
makevector(x)
makeVector(x)
x
m
source('~/Desktop/coursera/test.R')
makeVector(x)
source('~/Desktop/coursera/test.R')
makeVector(x)
source('~/Desktop/coursera/test.R')
source('~/Desktop/coursera/test.R')
makeVector(x)
source('~/Desktop/coursera/test.R')
source('~/Desktop/coursera/test.R')
makeVector(x)
source('~/Desktop/coursera/test.R')
makeVector(x)
source('~/Desktop/coursera/test.R')
makeVector(x)
set(x)
source('~/Desktop/coursera/test.R')
set(x)
makeVector(x)
x
m
m<100
m<-100
makeVector(x)
m
list("a","b")
source('~/Desktop/coursera/test.R')
makeVector(x)
source('~/Desktop/coursera/test.R')
makeVector(x)
m
x
source('~/Desktop/coursera/test2.R')
m
M-100
m<- 100
m
source('~/Desktop/coursera/test2.R')
m
source('~/Desktop/coursera/test.R')
makeVector(x)
m
source('~/Desktop/coursera/test.R')
makeVector(x)
m
source('~/Desktop/coursera/test.R')
makeVector(x)
m
source('~/Desktop/coursera/test.R')
makeVector(x)
m
source('~/Desktop/coursera/test.R')
var <- makeVector(1:20)
var$getmean()
m
M<-100
m<-100
var <- makeVector(1:20)
m
source('~/Desktop/coursera/test.R')
var <- makeVector(1:20)
var$getmean()
var$getmean()
cachemean(1:20)
data<- 1:20
makevector(data)
makeVector(data)
cachemean(data)
var2<-var$getmean
var2
var2<-var$getmean
var2
var$setmean()
var$setmean(m)
m
m<-300
var$setmean(m)
m
cahcemean(data)
cachemean(data)
cachemean(makevector(data))
cachemean(makeVector(data))
cachemean(makeVector(data))
m
source('~/Desktop/coursera/test.R')
cachemean(makeVector(data))
cachemean(makeVector(data))
source('~/Desktop/coursera/test.R')
m
cachemean(makeVector(data))
m
source('~/Desktop/coursera/test.R')
cachemean(makeVector(data))
cachemean(makeVector(data))
source('~/Desktop/coursera/test.R')
m<-NULL
m
cachemean(makeVector(data))
cachemean(makeVector(data))
source('~/Desktop/coursera/test.R')
var2 <-makevector(data)
var2 <-makeVector(data)
chachemean(var2)
cachemean(var2)
cachemean(var2)
m
M <-100
m <-100
m
var2 <-makeVector(data)
m
cachemean(var2)
m
cachemean(var2)
m
rm(m)
cachemean(var2)
m
source('~/Desktop/coursera/test.R')
source('~/Desktop/coursera/test.R')
source('~/Desktop/coursera/test.R')
source('~/Desktop/coursera/test.R')
m
M<-200
m<-200
m
source('~/Desktop/coursera/test.R')
m
getwd()
setwd("/Users/rphgbe/Desktop")
m
getwd()
rm(M)
source('~/Desktop/coursera/test.R')
m
setwd("/Users/rphgbe/Desktop/coursera")
getwd()
source('~/Desktop/coursera/test.R')
var2 <-makeVector(data)
cachemean(var2)
cachemean(var2)
cachemean(var2)
source('~/Desktop/coursera/test.R')
cachemean(var2)
var2 <-makeVector(data)
cachemean(var2)
cachemean(var2)
m
source('~/Desktop/coursera/test2.R')
m
source('~/Desktop/coursera/test2.R')
m
M<-100
m<-100
m
source('~/Desktop/coursera/test2.R')
m
var2 <-makeVector(data)
m
source('~/Desktop/coursera/test.R')
m
source('~/Desktop/coursera/test.R')
var2 <-makeVector(data)
m
var2 <-makeVector(data)
cachemean(var2)
m
cachemean(var2)
View(mtcars)
source('~/Desktop/coursera/test.R')
var2 <-makeVector(data)
cachemean(var2)
cachemean(var2)
var2 <-getmean
var2 <-getmean()
var2 <-var$getmean()
var2
var2 <-var$getmean()
var2 <-var$getmean()
m
var2 <-makeVector(data)
var2 <-var$getmean()
var2
cachemean(var2)
var2 <-makeVector(data)
cachemean(var2)
m
var2
var3 <-makeVector(1:10)
chachemean(var3)
cachemean(var3)
cachemean(var2)
cachemean(var2)
3
cachemean(var3)
var3
source('~/Desktop/coursera/test.R')
var3 <-makeVector(1:10)
var2 <-makeVector(data)
cachemean(var3)
cachemean(var2)
cachemean(var2)
cachemean(var2)
cachemean(var3)
var2
var3
source('~/Desktop/coursera/test.R')
View(corr)
source('~/Desktop/coursera/corr.R')
corr("specdata",0)
hlp
rm(hlp)
hlp
corr("specdata",0)
hlp
source('~/Desktop/coursera/corr.R')
rm(hlp)
hlp
corr("specdata",0)
hlp
var2 <-makeVector(data)
var2$setmean()
var2$setmean(var)
var2$getmean(var)
cachemean(var2)
var2$getmean(var)
var2 <-makeVector(data)
cachemean(var2)
cachemean(var2)
cachemean(var2)
data <- 1:50
cachemean(var2)
cachemean(var2)
var2 <-makeVector(data)
cachemean(var2)
cachemean(var2)
dat <-matrix(1:4,nrow=2,ncol=2)
dat
solve(dat)
ls
dir()
cd ProgrammingAssignment2
csetdw("ProgrammingAssignment2")
setdw("ProgrammingAssignment2")
setwd("ProgrammingAssignment2")
dir()
source('~/Desktop/coursera/test.R')
car<-makeVector(1:20)
cachemean(car)
cachemean(car)
source('~/Desktop/coursera/test.R')
car<-makeVector(1:20)
cachemean(car)
cachemean(car)
cachemean(car)
cachemean(car)
source('~/Desktop/coursera/test.R')
car<-makeVector(1:20)
cachemean(car)
cachemean(car)
cachemean(car)
source('~/Desktop/coursera/test.R')
car <- matrix(LETTERS,2,13)
car
car <- matrix(letters,2,13)
car
solve(car)
effe <- function (x =numetrix matrix()) x
effe <- function (x =numeric() matrix()) x
effe <- function (x =matrix()) x
effe(1:4)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
car
car <-matrix(1:4,2,2)
car
makeCacheMatrix(car)
cacheSolve(car)
cacheSolve(car)
car
var <-makeCacheMatrix(car)
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
var <-makeCacheMatrix(car)
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
solve(car,...)
solve(car, ...)
solve(car)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
var <-makeCacheMatrix(car)
cacheSolve(var)
car
solve(car)
solve(car, ...)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(var)
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
car <-matrix(1:25,5,5)
var <-makeCacheMatrix(car)
cacheSolve(var)
car
solve(car)
determinant.matrix(car)
determinant(car)
car <- matrix(1:9,3,3)
var <-makeCacheMatrix(car)
cacheSolve(var)
solve(car)
car[1,] <- c(2,01,0)
car[2,] <- c(1,-3,2)
car[3,] <- c(3,0,)
car
car[1,2] <- -1
car[3,3] <- 1
car
car[3,2] <- 0
car
var <-makeCacheMatrix(car)
cacheSolve(var)
cacheSolve(var)
car<-matrix(c(4,0,0,1,0,0,1,0,0,2,2,0,0,0,0,1),4,4)
car
var <-makeCacheMatrix(car)
cacheSolve(var)
cacheSolve(var)
car<-matrix(c(1,3,0,2,1,0,3,4,5),3,3)
var <-makeCacheMatrix(car)
cacheSolve(var)
cacheSolve(var)
rm(list=ls())
car<-matrix(c(1,3,0,2,1,0,3,4,5),3,3)
var <-makeCacheMatrix(car)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
var <-makeCacheMatrix(car)
cacheSolve(var)
cacheSolve(var)
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
? optimize
f <- function (x, a) (x - a)^2
xmin <- optimize(f, c(0, 1), tol = 0.0001, a = 1/3)
xmin
## See where the function is evaluated:
optimize(function(x) x^2*(print(x)-1), lower = 0, upper = 10)
## "wrong" solution with unlucky interval and piecewise constant f():
f  <- function(x) ifelse(x > -1, ifelse(x < 4, exp(-1/abs(x - 1)), 10), 10)
fp <- function(x) { print(x); f(x) }
plot(f, -2,5, ylim = 0:1, col = 2)
optimize(fp, c(-4, 20))   # doesn't see the minimum
optimize(fp, c(-7, 20))   # ok
